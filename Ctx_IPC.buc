<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.contextFile org.eventb.core.comment="* ***************************************************&#10;The Event-B model of a verified partitioning kernel for safety-critical realtime systems&#10;Created by Yongwang Zhao ( zhaoyongwang@gmail.com)&#10;National Key Laboratory of Software Development Environment (NLSDE)&#10;School of Computer and Engineering, Beihang University, Beijing, China&#10;Date: 05/2014&#10;**************************************************/" org.eventb.core.configuration="org.eventb.core.fwd;de.prob.symbolic.ctxBase;de.prob.units.mchBase;org.eventb.codegen.ui.cgConfig;org.animb.valuation.valBase" org.eventb.texttools.text_lastmodified="1403356876622" org.eventb.texttools.text_representation="context Ctx_IPC&#10;//* ***************************************************&#10;//   The Event-B model of a verified partitioning kernel for safety-critical realtime systems&#10;//   Created by Yongwang Zhao ( zhaoyongwang@gmail.com)&#10;//   National Key Laboratory of Software Development Environment (NLSDE)&#10;//   School of Computer and Engineering, Beihang University, Beijing, China&#10;//&#10;&#10;//   Date: 05/2014&#10;//   **************************************************/&#10;extends Ctx_PartProc_Manage&#10;&#10;sets PORTS //port set which is configured by system integrator in the configuration file&#10;&#9;//CHANNELS //channel set which is configurated by system integrator in the configuration file&#10;&#9;PORT_DIRECTIONS //port direction type&#10;&#9;PORT_MODES //port mode type&#10;&#9;MESSAGES //the set of communication msg&#10;&#9;QUEUING_DISCIPLINE //the queueing descipline&#10;&#9;BLACKBOARD_INDICATORTYPE&#10;&#10;&#9;EVENT_STATE&#10;&#10;&#9;BUFFERS&#10;&#9;BLACKBOARDS&#10;&#9;SEMAPHORES&#10;&#9;EVENTS&#10;&#10;&#9;BufferWaitingTypes&#10;&#10;&#10;constants PORT_SOURCE PORT_DESTINATION //port directions: source and destination&#10;&#9;PORT_MODE_SAMPLING PORT_MODE_QUQUING //port modes: sampling or queuing&#10;&#10;&#9;QUEUE_FIFO QUEUE_PRIORITY&#10;&#10;&#9;BB_EMPTY BB_OCCUPIED&#10;&#10;&#9;EVENT_UP EVENT_DOWN&#10;&#10;&#9;SamplingPorts QueuingPorts //two parttion set of the PORTS set&#10;&#9;Source_SamplingPorts Dest_SamplingPorts //two partition set of samplingports: src and dest&#10;&#9;Source_QueuingPorts Dest_QueuingPorts //two partition set of queuingports: src and dest&#10;&#9;Sampling_Channels&#10;&#9;Queuing_Channels&#10;&#10;&#9;Ports_of_Partition&#10;&#9;//SourcePort_of_Channels&#10;&#9;//DestPorts_of_Channels&#10;&#9;Mode_of_Ports&#10;&#9;Direction_of_Ports&#10;&#10;&#9;MaxMsgSize_of_Ports&#10;&#9;MaxMsgNum_of_QueuingPorts&#10;&#9;//RefreshPeriod_of_SamplingPorts&#10;&#10;&#10;&#9;WAITING_R&#10;    WAITING_W&#10;&#10;    //nextlines are used for model checking IPC&#10;    //PT1 PT2 PT3 PT4&#10;    //MSG1 MSG2 MSG3 MSG4 MSG5&#10;&#10;&#10;&#10;axioms&#10;&#9;@axm_finite_ports finite(PORTS)&#10;&#9;//@axm_finite_channels finite(CHANNELS)&#10;&#9;@axm_finite_msg finite(MESSAGES)&#10;&#10;&#9;@axm_ports_partition partition(PORTS,SamplingPorts,QueuingPorts)&#10;&#9;@axm_queueports_partition partition(QueuingPorts,Source_QueuingPorts,Dest_QueuingPorts)&#10;&#9;@axm_sampports_partition partition(SamplingPorts,Source_SamplingPorts, Dest_SamplingPorts)&#10;&#10;&#9;@axm_samp_channels Sampling_Channels ∈ Dest_SamplingPorts ↠ Source_SamplingPorts //total surjection&#10;&#9;@axm_que_channels Queuing_Channels ∈ Dest_QueuingPorts ↠ Source_QueuingPorts //total surjection&#10;&#10;&#9;////////////////////////////////////////////////////////////////////////////&#10;&#9;//nextlines are used for model chekcing IPC&#10;&#9;//@axm01 partition(Source_QueuingPorts,{PT1})&#10;&#9;//@axm02 partition(Dest_QueuingPorts,{PT2})&#10;&#9;//@axm03 partition(Source_SamplingPorts,{PT3})&#10;&#9;//@axm04 partition(Dest_SamplingPorts,{PT4})&#10;&#9;//@axm05 partition(Sampling_Channels,{PT4↦PT3})&#10;&#9;//@axm06 partition(Queuing_Channels,{PT2↦PT1})&#10;&#9;//@axm07 partition(MESSAGES,{MSG1},{MSG2},{MSG3},{MSG4},{MSG5})&#10;&#9;////////////////////////////////////////////////////////////////////////////&#10;&#10;&#10;&#9;@axm_portdirect_partition partition(PORT_DIRECTIONS,{PORT_SOURCE},{PORT_DESTINATION})&#10;&#9;@axm_portmode_partition partition(PORT_MODES,{PORT_MODE_SAMPLING},{PORT_MODE_QUQUING})&#10;&#10;&#9;@axm_quediscipline partition(QUEUING_DISCIPLINE,{QUEUE_FIFO},{QUEUE_PRIORITY})&#10;&#10;&#9;@axm_bbindicator partition(BLACKBOARD_INDICATORTYPE,{BB_EMPTY},{BB_OCCUPIED})&#10;&#9;@axm_event_state partition(EVENT_STATE,{EVENT_UP},{EVENT_DOWN})&#10;&#10;&#9;@axm_portsofpartition Ports_of_Partition∈PORTS→PARTITIONS //total function: each port belongs to a partition&#10;&#9;//@axm_srcport_channel SourcePort_of_Channels∈CHANNELS ⤖ (Source_SamplingPorts ∪ Source_QueuingPorts) //bijection&#10;&#9;//@axm_destport_channel DestPorts_of_Channels∈(Dest_SamplingPorts ∪ Dest_QueuingPorts) ↠ CHANNELS //total surjection&#10;&#9;@axm_modeofports Mode_of_Ports∈PORTS→  PORT_MODES&#10;&#9;@axm_directofports Direction_of_Ports∈PORTS→  PORT_DIRECTIONS&#10;&#9;@axm_maxmsgsize_of_ports MaxMsgSize_of_Ports∈PORTS → ℕ1&#10;&#9;@axm_maxmsgnum_of_queports  MaxMsgNum_of_QueuingPorts ∈ QueuingPorts → ℕ1&#10;&#10;&#9;////////////////////////////////////////////////////////////////////////////&#10;&#9;//nextlines are used for model chekcing IPC&#10;&#9;//@axm08 partition(MaxMsgNum_of_QueuingPorts,{PT1↦1},{PT2↦1})&#10;&#9;////////////////////////////////////////////////////////////////////////////&#10;&#10;&#9;@axm_srcport_direct ∀p·(p∈(Source_SamplingPorts∪Source_QueuingPorts)⇒ Direction_of_Ports(p)=PORT_SOURCE)&#10;&#9;@axm_destport_direct ∀p·(p∈(Dest_SamplingPorts∪Dest_QueuingPorts)⇒ Direction_of_Ports(p)=PORT_DESTINATION)&#10;&#9;//@axm_disjoint_srcdestports dom(DestPorts_of_Channels)∩ran(SourcePort_of_Channels)=∅ //a port is either a source port or a dest port&#10;&#9;//@axm_portofachannel_has_samemode ∀c·(c∈CHANNELS ⇒  (∀p·(p∈DestPorts_of_Channels∼[{c}]⇒Mode_of_Ports(SourcePort_of_Channels(c))=Mode_of_Ports(p) )))&#10;&#9;//@axm ∀c,p1,p2·(c∈CHANNELS ∧ p1∈PORTS ∧ p2∈PORTS ∧ p1=SourcePort_of_Channels(c) ∧ p2∈DestPorts_of_Channels∼[{c}] ⇒ Mode_of_Ports(p1)=Mode_of_Ports(p2)))&#10;&#10;&#9;@axm_sampports SamplingPorts = Mode_of_Ports∼[{PORT_MODE_SAMPLING}]&#10;&#9;@axm_queueports QueuingPorts = Mode_of_Ports∼[{PORT_MODE_QUQUING}]&#10;&#9;@axm_src_sampports Source_SamplingPorts = SamplingPorts ∩ Direction_of_Ports∼[{PORT_SOURCE}]&#10;&#9;@axm_dest_sampports Dest_SamplingPorts = SamplingPorts ∩ Direction_of_Ports∼[{PORT_DESTINATION}]&#10;&#9;@axm_src_queueports Source_QueuingPorts = QueuingPorts ∩ Direction_of_Ports∼[{PORT_SOURCE}]&#10;&#9;@axm_dest_queueports Dest_QueuingPorts = QueuingPorts ∩ Direction_of_Ports∼[{PORT_DESTINATION}]&#10;&#10;&#9;@axm_finite_buffers finite(BUFFERS) ∧ card(BUFFERS)=1024&#10;&#9;@axm_finite_blackboards finite(BLACKBOARDS) ∧ card(BLACKBOARDS)=1024&#10;&#9;@axm_finite_semaphores finite(SEMAPHORES) ∧ card(SEMAPHORES)=1024&#10;&#9;@axm_finite_events finite(EVENTS) ∧ card(EVENTS)=1024&#10;&#10;   @axm_waiting_types partition(BufferWaitingTypes,{WAITING_R},{WAITING_W})&#10;&#10;&#10;&#10;&#10;end&#10;" version="3">
<org.eventb.core.extendsContext name="'" org.eventb.core.target="Ctx_PartProc_Manage"/>
<org.eventb.core.carrierSet name="_tncogNp4EeOkp8gIz_e_3A" org.eventb.core.comment="port set which is configured by system integrator in the configuration file&#10;CHANNELS //channel set which is configurated by system integrator in the configuration file" org.eventb.core.identifier="PORTS"/>
<org.eventb.core.constant name="_O_GwwNp5EeOkp8gIz_e_3A" org.eventb.core.identifier="PORT_SOURCE"/>
<org.eventb.core.constant name="_O_Gwwdp5EeOkp8gIz_e_3A" org.eventb.core.comment="port directions: source and destination" org.eventb.core.identifier="PORT_DESTINATION"/>
<org.eventb.core.constant name="_O_Gwwtp5EeOkp8gIz_e_3A" org.eventb.core.identifier="PORT_MODE_SAMPLING"/>
<org.eventb.core.constant name="_O_Gww9p5EeOkp8gIz_e_3A" org.eventb.core.comment="port modes: sampling or queuing" org.eventb.core.identifier="PORT_MODE_QUQUING"/>
<org.eventb.core.constant name="_Ju1F4NtpEeO9zNSWZY0Sqw" org.eventb.core.identifier="QUEUE_FIFO"/>
<org.eventb.core.constant name="_Ju1F4dtpEeO9zNSWZY0Sqw" org.eventb.core.identifier="QUEUE_PRIORITY"/>
<org.eventb.core.constant name="_bUX5YNyfEeOWda2bYj8DcQ" org.eventb.core.identifier="BB_EMPTY"/>
<org.eventb.core.constant name="_bUX5YdyfEeOWda2bYj8DcQ" org.eventb.core.identifier="BB_OCCUPIED"/>
<org.eventb.core.constant name="_aJrlAN2pEeOOJcOQCDHIwg" org.eventb.core.identifier="EVENT_UP"/>
<org.eventb.core.constant name="_aJrlAd2pEeOOJcOQCDHIwg" org.eventb.core.identifier="EVENT_DOWN"/>
<org.eventb.core.constant name="_58AU8Np5EeOkp8gIz_e_3A" org.eventb.core.identifier="SamplingPorts"/>
<org.eventb.core.constant name="_58AU8dp5EeOkp8gIz_e_3A" org.eventb.core.comment="two parttion set of the PORTS set" org.eventb.core.identifier="QueuingPorts"/>
<org.eventb.core.axiom name="_C4j6ENqXEeOJlsJNAJz3Bg" org.eventb.core.comment="@axm_finite_channels finite(CHANNELS)" org.eventb.core.label="axm_finite_ports" org.eventb.core.predicate="finite(PORTS)"/>
<org.eventb.core.axiom name="_9FtfEOCTEeOhSYsQWkKi0A" org.eventb.core.label="axm_finite_msg" org.eventb.core.predicate="finite(MESSAGES)"/>
<org.eventb.core.axiom name="_58AU8tp5EeOkp8gIz_e_3A" org.eventb.core.label="axm_ports_partition" org.eventb.core.predicate="partition(PORTS,SamplingPorts,QueuingPorts)"/>
<org.eventb.core.axiom name="_RUN_Qdp_EeOkp8gIz_e_3A" org.eventb.core.label="axm_queueports_partition" org.eventb.core.predicate="partition(QueuingPorts,Source_QueuingPorts,Dest_QueuingPorts)"/>
<org.eventb.core.axiom name="_RUN_QNp_EeOkp8gIz_e_3A" org.eventb.core.label="axm_sampports_partition" org.eventb.core.predicate="partition(SamplingPorts,Source_SamplingPorts, Dest_SamplingPorts)"/>
<org.eventb.core.axiom name="_XbutIvJGEeOJxZjYtpnVgA" org.eventb.core.comment="total surjection" org.eventb.core.label="axm_samp_channels" org.eventb.core.predicate="Sampling_Channels ∈ Dest_SamplingPorts ↠ Source_SamplingPorts"/>
<org.eventb.core.axiom name="_qymxUfI9EeOJxZjYtpnVgA" org.eventb.core.comment="total surjection&#10;//////////////////////////////////////////////////////////////////////////&#10;nextlines are used for model chekcing IPC&#10;@axm01 partition(Source_QueuingPorts,{PT1})&#10;@axm02 partition(Dest_QueuingPorts,{PT2})&#10;@axm03 partition(Source_SamplingPorts,{PT3})&#10;@axm04 partition(Dest_SamplingPorts,{PT4})&#10;@axm05 partition(Sampling_Channels,{PT4↦PT3})&#10;@axm06 partition(Queuing_Channels,{PT2↦PT1})&#10;@axm07 partition(MESSAGES,{MSG1},{MSG2},{MSG3},{MSG4},{MSG5})&#10;//////////////////////////////////////////////////////////////////////////" org.eventb.core.label="axm_que_channels" org.eventb.core.predicate="Queuing_Channels ∈ Dest_QueuingPorts ↠ Source_QueuingPorts"/>
<org.eventb.core.carrierSet name="_LgVuYNp6EeOkp8gIz_e_3A" org.eventb.core.comment="port direction type" org.eventb.core.identifier="PORT_DIRECTIONS"/>
<org.eventb.core.carrierSet name="_LgVuYdp6EeOkp8gIz_e_3A" org.eventb.core.comment="port mode type" org.eventb.core.identifier="PORT_MODES"/>
<org.eventb.core.axiom name="_LgVuYtp6EeOkp8gIz_e_3A" org.eventb.core.label="axm_portdirect_partition" org.eventb.core.predicate="partition(PORT_DIRECTIONS,{PORT_SOURCE},{PORT_DESTINATION})"/>
<org.eventb.core.axiom name="_LgVuY9p6EeOkp8gIz_e_3A" org.eventb.core.label="axm_portmode_partition" org.eventb.core.predicate="partition(PORT_MODES,{PORT_MODE_SAMPLING},{PORT_MODE_QUQUING})"/>
<org.eventb.core.constant name="_IqRG4Np_EeOkp8gIz_e_3A" org.eventb.core.identifier="Source_SamplingPorts"/>
<org.eventb.core.constant name="_IqRG4dp_EeOkp8gIz_e_3A" org.eventb.core.comment="two partition set of samplingports: src and dest" org.eventb.core.identifier="Dest_SamplingPorts"/>
<org.eventb.core.constant name="_IqRG4tp_EeOkp8gIz_e_3A" org.eventb.core.identifier="Source_QueuingPorts"/>
<org.eventb.core.constant name="_IqRG49p_EeOkp8gIz_e_3A" org.eventb.core.comment="two partition set of queuingports: src and dest" org.eventb.core.identifier="Dest_QueuingPorts"/>
<org.eventb.core.constant name="_XbutIPJGEeOJxZjYtpnVgA" org.eventb.core.identifier="Sampling_Channels"/>
<org.eventb.core.constant name="_XbutIfJGEeOJxZjYtpnVgA" org.eventb.core.identifier="Queuing_Channels"/>
<org.eventb.core.constant name="_axHw0Np6EeOkp8gIz_e_3A" org.eventb.core.comment="SourcePort_of_Channels&#10;DestPorts_of_Channels" org.eventb.core.identifier="Ports_of_Partition"/>
<org.eventb.core.axiom name="_Ju1F4ttpEeO9zNSWZY0Sqw" org.eventb.core.label="axm_quediscipline" org.eventb.core.predicate="partition(QUEUING_DISCIPLINE,{QUEUE_FIFO},{QUEUE_PRIORITY})"/>
<org.eventb.core.axiom name="_bUX5YtyfEeOWda2bYj8DcQ" org.eventb.core.label="axm_bbindicator" org.eventb.core.predicate="partition(BLACKBOARD_INDICATORTYPE,{BB_EMPTY},{BB_OCCUPIED})"/>
<org.eventb.core.axiom name="_aJrlAt2pEeOOJcOQCDHIwg" org.eventb.core.label="axm_event_state" org.eventb.core.predicate="partition(EVENT_STATE,{EVENT_UP},{EVENT_DOWN})"/>
<org.eventb.core.axiom name="_lpV3kNp6EeOkp8gIz_e_3A" org.eventb.core.comment="total function: each port belongs to a partition&#10;@axm_srcport_channel SourcePort_of_Channels∈CHANNELS ⤖ (Source_SamplingPorts ∪ Source_QueuingPorts) //bijection&#10;@axm_destport_channel DestPorts_of_Channels∈(Dest_SamplingPorts ∪ Dest_QueuingPorts) ↠ CHANNELS //total surjection" org.eventb.core.label="axm_portsofpartition" org.eventb.core.predicate="Ports_of_Partition∈PORTS→PARTITIONS"/>
<org.eventb.core.axiom name="_4ElY8Np8EeOkp8gIz_e_3A" org.eventb.core.label="axm_modeofports" org.eventb.core.predicate="Mode_of_Ports∈PORTS→  PORT_MODES"/>
<org.eventb.core.axiom name="_4ElY8dp8EeOkp8gIz_e_3A" org.eventb.core.label="axm_directofports" org.eventb.core.predicate="Direction_of_Ports∈PORTS→  PORT_DIRECTIONS"/>
<org.eventb.core.axiom name="_3W6mYNqXEeOJlsJNAJz3Bg" org.eventb.core.label="axm_maxmsgsize_of_ports" org.eventb.core.predicate="MaxMsgSize_of_Ports∈PORTS → ℕ1"/>
<org.eventb.core.axiom name="_3W6mYdqXEeOJlsJNAJz3Bg" org.eventb.core.comment="//////////////////////////////////////////////////////////////////////////&#10;nextlines are used for model chekcing IPC&#10;@axm08 partition(MaxMsgNum_of_QueuingPorts,{PT1↦1},{PT2↦1})&#10;//////////////////////////////////////////////////////////////////////////" org.eventb.core.label="axm_maxmsgnum_of_queports" org.eventb.core.predicate="MaxMsgNum_of_QueuingPorts ∈ QueuingPorts → ℕ1"/>
<org.eventb.core.axiom name="_D9_P4Np9EeOkp8gIz_e_3A" org.eventb.core.label="axm_srcport_direct" org.eventb.core.predicate="∀p·(p∈(Source_SamplingPorts∪Source_QueuingPorts)⇒ Direction_of_Ports(p)=PORT_SOURCE)"/>
<org.eventb.core.axiom name="_D9_P4dp9EeOkp8gIz_e_3A" org.eventb.core.comment="@axm_disjoint_srcdestports dom(DestPorts_of_Channels)∩ran(SourcePort_of_Channels)=∅ //a port is either a source port or a dest port&#10;@axm_portofachannel_has_samemode ∀c·(c∈CHANNELS ⇒  (∀p·(p∈DestPorts_of_Channels∼[{c}]⇒Mode_of_Ports(SourcePort_of_Channels(c))=Mode_of_Ports(p) )))&#10;@axm ∀c,p1,p2·(c∈CHANNELS ∧ p1∈PORTS ∧ p2∈PORTS ∧ p1=SourcePort_of_Channels(c) ∧ p2∈DestPorts_of_Channels∼[{c}] ⇒ Mode_of_Ports(p1)=Mode_of_Ports(p2)))" org.eventb.core.label="axm_destport_direct" org.eventb.core.predicate="∀p·(p∈(Dest_SamplingPorts∪Dest_QueuingPorts)⇒ Direction_of_Ports(p)=PORT_DESTINATION)"/>
<org.eventb.core.constant name="_4ElY8tp8EeOkp8gIz_e_3A" org.eventb.core.identifier="Mode_of_Ports"/>
<org.eventb.core.constant name="_4ElY89p8EeOkp8gIz_e_3A" org.eventb.core.identifier="Direction_of_Ports"/>
<org.eventb.core.axiom name="_xt540Np-EeOkp8gIz_e_3A" org.eventb.core.label="axm_sampports" org.eventb.core.predicate="SamplingPorts = Mode_of_Ports∼[{PORT_MODE_SAMPLING}]"/>
<org.eventb.core.axiom name="_xt540dp-EeOkp8gIz_e_3A" org.eventb.core.label="axm_queueports" org.eventb.core.predicate="QueuingPorts = Mode_of_Ports∼[{PORT_MODE_QUQUING}]"/>
<org.eventb.core.axiom name="_hj8WMNp_EeOkp8gIz_e_3A" org.eventb.core.label="axm_src_sampports" org.eventb.core.predicate="Source_SamplingPorts = SamplingPorts ∩ Direction_of_Ports∼[{PORT_SOURCE}]"/>
<org.eventb.core.axiom name="_hj8WMdp_EeOkp8gIz_e_3A" org.eventb.core.label="axm_dest_sampports" org.eventb.core.predicate="Dest_SamplingPorts = SamplingPorts ∩ Direction_of_Ports∼[{PORT_DESTINATION}]"/>
<org.eventb.core.axiom name="_hj8WMtp_EeOkp8gIz_e_3A" org.eventb.core.label="axm_src_queueports" org.eventb.core.predicate="Source_QueuingPorts = QueuingPorts ∩ Direction_of_Ports∼[{PORT_SOURCE}]"/>
<org.eventb.core.axiom name="_hj8WM9p_EeOkp8gIz_e_3A" org.eventb.core.label="axm_dest_queueports" org.eventb.core.predicate="Dest_QueuingPorts = QueuingPorts ∩ Direction_of_Ports∼[{PORT_DESTINATION}]"/>
<org.eventb.core.constant name="_3XEXYNqXEeOJlsJNAJz3Bg" org.eventb.core.identifier="MaxMsgSize_of_Ports"/>
<org.eventb.core.constant name="_3XEXYdqXEeOJlsJNAJz3Bg" org.eventb.core.comment="RefreshPeriod_of_SamplingPorts" org.eventb.core.identifier="MaxMsgNum_of_QueuingPorts"/>
<org.eventb.core.carrierSet name="_WWfGYNsbEeO9zNSWZY0Sqw" org.eventb.core.comment="the set of communication msg" org.eventb.core.identifier="MESSAGES"/>
<org.eventb.core.carrierSet name="_Ju1F49tpEeO9zNSWZY0Sqw" org.eventb.core.comment="the queueing descipline" org.eventb.core.identifier="QUEUING_DISCIPLINE"/>
<org.eventb.core.carrierSet name="_bUhqYNyfEeOWda2bYj8DcQ" org.eventb.core.identifier="BLACKBOARD_INDICATORTYPE"/>
<org.eventb.core.carrierSet name="_aJrlA92pEeOOJcOQCDHIwg" org.eventb.core.identifier="EVENT_STATE"/>
<org.eventb.core.carrierSet name="_j7oGgNwEEeOJkaz9dS3ZBA" org.eventb.core.identifier="BUFFERS"/>
<org.eventb.core.carrierSet name="_j7oGgdwEEeOJkaz9dS3ZBA" org.eventb.core.identifier="BLACKBOARDS"/>
<org.eventb.core.carrierSet name="_j7oGgtwEEeOJkaz9dS3ZBA" org.eventb.core.identifier="SEMAPHORES"/>
<org.eventb.core.carrierSet name="_j7oGg9wEEeOJkaz9dS3ZBA" org.eventb.core.identifier="EVENTS"/>
<org.eventb.core.carrierSet name="_AmuHENwHEeOJkaz9dS3ZBA" org.eventb.core.identifier="BufferWaitingTypes"/>
<org.eventb.core.constant name="_AmuHEdwHEeOJkaz9dS3ZBA" org.eventb.core.identifier="WAITING_R"/>
<org.eventb.core.constant name="_AmuHEtwHEeOJkaz9dS3ZBA" org.eventb.core.comment="nextlines are used for model checking IPC&#10;PT1 PT2 PT3 PT4&#10;MSG1 MSG2 MSG3 MSG4 MSG5" org.eventb.core.identifier="WAITING_W"/>
<org.eventb.core.axiom name="_9Rq-8NyXEeOWda2bYj8DcQ" org.eventb.core.label="axm_finite_buffers" org.eventb.core.predicate="finite(BUFFERS) ∧ card(BUFFERS)=1024"/>
<org.eventb.core.axiom name="_9Rq-8dyXEeOWda2bYj8DcQ" org.eventb.core.label="axm_finite_blackboards" org.eventb.core.predicate="finite(BLACKBOARDS) ∧ card(BLACKBOARDS)=1024"/>
<org.eventb.core.axiom name="_9Rq-8tyXEeOWda2bYj8DcQ" org.eventb.core.label="axm_finite_semaphores" org.eventb.core.predicate="finite(SEMAPHORES) ∧ card(SEMAPHORES)=1024"/>
<org.eventb.core.axiom name="_9Rq-89yXEeOWda2bYj8DcQ" org.eventb.core.label="axm_finite_events" org.eventb.core.predicate="finite(EVENTS) ∧ card(EVENTS)=1024"/>
<org.eventb.core.axiom name="_AmuHE9wHEeOJkaz9dS3ZBA" org.eventb.core.label="axm_waiting_types" org.eventb.core.predicate="partition(BufferWaitingTypes,{WAITING_R},{WAITING_W})"/>
</org.eventb.core.contextFile>
